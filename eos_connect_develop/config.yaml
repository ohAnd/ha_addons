name: "EOS connect develop"
description: "Tool to optimize energy usage with EOS system data."
version: "0.1.0.105"
slug: "eos_connect_develop"
url: "https://github.com/ohAnd/EOS_connect"
arch:
  - aarch64
  - amd64
  - armhf # very long build time on github ~ 32mins - deprecated - https://www.home-assistant.io/blog/2025/06/11/release-20256/#deprecating-installation-methods-and-32-bit-architectures
  - armv7 # very long build time on github ~ 32mins - deprecated - https://www.home-assistant.io/blog/2025/06/11/release-20256/#deprecating-installation-methods-and-32-bit-architectures
  - i386 # deprecated - https://www.home-assistant.io/blog/2025/06/11/release-20256/#deprecating-installation-methods-and-32-bit-architectures

panel_icon: mdi:home-battery
panel_admin: false

ingress: true
ingress_port: 8081
init: false

image: "ghcr.io/ohand/ha-addon-eos_connect_develop_{arch}"

map:
  - type: addon_config
    read_only: false
    path: /app/addon_config
host_network: true

options:
  load:
    source: default # Data source for load power - openhab, homeassistant, default (static data)
    url: http://<ip>:8080 # URL for openhab (e.g. ip:8080) or homeassistant (e.g. ip:8123)
    access_token: "" # access token for homeassistant (optional)
    load_sensor: sensor.load_power # item / entity name for load power data (openhab item/ homeassistant sensor)
    car_charge_load_sensor: "" # item / entity for wallbox power data
    additional_load_1_sensor: "" # item / entity for additional load power data in watts
    additional_load_1_runtime: 0 # runtime of additional load 1 in hours
    additional_load_1_consumption: 0 # overall consumption of additional load 1 in Wh for the given hours

  eos:
    server: 192.168.1.94 # EOS server address
    port: 8503 # port for EOS server
    timeout: 180 # timeout for EOS optimize request in seconds

  price:
    source: default # Data source for electricity price
    token: "" # Token for electricity price
    fixed_24h_array:  # 24 hours array with fixed prices over the day
    feed_in_price: 0 # Feed-in price for electricity in EUR/kWh (optional)
    negative_price_switch: False # Switch for negative stock price handling True/ False (optional)

  battery:
    source: default # Data source for battery SOC - openhab, homeassistant, default (static data)
    url: http://<ip>:8080 # URL for openhab (e.g. ip:8080) or homeassistant (e.g. ip:8123)
    soc_sensor: sensor.battery_soc
    access_token: 123456abcd # access token for homeassistant (optional)
    capacity_wh: 11059 # Battery capacity in Wh
    charge_efficiency: 0.88 # Efficiency for charging the battery
    discharge_efficiency: 0.88 # Efficiency for discharging the battery
    max_charge_power_w: 5000 # Maximum charging power in W
    min_soc_percentage: 5 # Minimum state of charge percentage
    max_soc_percentage: 100 # Maximum state of charge percentage
    price_euro_per_wh_accu: 0.0000 # price for battery in €/Wh
    charging_curve_enabled: true # Enable charging curve for battery - default: true

  pv_forecast_source:
    source: akkudoktor # data source for solar forecast providers akkudoktor, openmeteo, openmeteo_local, forecast_solar, default (default uses akkudoktor)

  pv_forecast:
    - name: roof_west #name
      lat: 47.5 # Latitude for PV forecast @ Akkudoktor API
      lon: 8.5 # Longitude for PV forecast @ Akkudoktor API
      azimuth: 90.0 # Azimuth for PV forecast @ Akkudoktor API
      tilt: 30.0 # Tilt for PV forecast @ Akkudoktor API
      power: 4600 # Power for PV forecast @ Akkudoktor API
      powerInverter: 5000 # Power Inverter for PV forecast @ Akkudoktor API
      inverterEfficiency: 0.9 # Inverter Efficiency for PV forecast @ Akkudoktor API
      horizon: "10,20,10,15" # Horizon to calculate shading up to 360 values to describe shading situation for your PV
    - name: garden_south #name
      lat: 47.5 # Latitude for PV forecast @ Akkudoktor API
      lon: 8.5 # Longitude for PV forecast @ Akkudoktor API
      azimuth: 0.1 # Azimuth for PV forecast @ Akkudoktor API
      tilt: 45.0 # Tilt for PV forecast @ Akkudoktor API
      power: 860 # Power for PV forecast @ Akkudoktor API
      powerInverter: 800 # Power Inverter for PV forecast @ Akkudoktor API
      inverterEfficiency: 0.9 # Inverter Efficiency for PV forecast @ Akkudoktor API
      horizon: "" # Horizon to calculate shading up to 360 values to describe shading situation for your PV

  inverter:
    type: "default"
    address: "192.168.1.12"
    user: "customer"
    password: "abc123"
    max_grid_charge_rate: 5000
    max_pv_charge_rate: 5000

  evcc:
    url: http://yourEVCCserver:7070 # URL to your evcc installation, if not used set to "" or leave as http://yourEVCCserver:7070

  mqtt:
    enabled: false # Enable MQTT - default: false
    broker: localhost # URL for MQTT server - default: mqtt://yourMQTTserver
    port: 1883 # Port for MQTT server - default: 1883
    user: mqtt_user # Username for MQTT server - default: mqtt
    password: mqtt_password # Password for MQTT server - default: mqtt
    tls: false # Use TLS for MQTT server - default: false
    ha_mqtt_auto_discovery: true # Enable Home Assistant MQTT auto discovery - default: true
    ha_mqtt_auto_discovery_prefix: homeassistant # Prefix for Home Assistant MQTT auto discovery - default: homeassistant
  
  refresh_time: 3 # Default refresh time in minutes
  time_zone: Europe/Berlin # Default time zone
  eos_connect_web_port: 8081 # Default port for EOS connect server
  log_level: info # loglevel: debug, info, warning, error

schema:
  load:
    source: list(openhab|homeassistant|default) # Data source for load power
    url: str # URL for openhab or homeassistant
    access_token: password? # access token for homeassistant (optional)
    load_sensor: str # item / entity name for load power data
    car_charge_load_sensor: str? # item / entity for wallbox power data
    additional_load_1_sensor: str? # item / entity for additional load power data in watts
    additional_load_1_runtime: int(0,)? # runtime of additional load 1 in hours
    additional_load_1_consumption: int(0,)? # overall consumption of additional load 1 in Wh for the given hours

  eos:
    server: str # EOS server address
    port: port # port for EOS server
    timeout: int(1,) # timeout for EOS optimize request in seconds

  price:
    source: list(smartenergy_at|tibber|fixed_24h|default) # Data source for electricity price
    token: password? # Token for electricity price
    fixed_24h_array: str? # 24 hours array with fixed prices over the day
    feed_in_price: float? # Feed-in price for electricity in EUR/kWh (optional)
    negative_price_switch: bool? # Switch for negative stock price handling True/ False (optional)

  battery:
    source: list(openhab|homeassistant|default) # Data source for battery SOC
    url: str # URL for openhab or homeassistant
    soc_sensor: str # item / entity name for soc_sensor
    access_token: password? # access token for homeassistant (optional)
    capacity_wh: int(1,) # Battery capacity in Wh
    charge_efficiency: float(0,1) # Efficiency for charging the battery
    discharge_efficiency: float(0,1) # Efficiency for discharging the battery
    max_charge_power_w: int(1,) # Maximum charging power in W
    min_soc_percentage: int(0,100) # Minimum state of charge percentage
    max_soc_percentage: int(0,100) # Maximum state of charge percentage
    price_euro_per_wh_accu: float # price for battery in €/Wh
    charging_curve_enabled: bool # Enable charging curve for battery - default: true

  pv_forecast_source:
    source: list(akkudoktor|openmeteo|openmeteo_local|forecast_solar|default) # data source for solar forecast providers, default (default uses akkudoktor)

  pv_forecast:
    - name: str # name
      lat: float(,90) # Latitude for PV forecast
      lon: float(,180) # Longitude for PV forecast
      azimuth: float(,180) # Azimuth for PV forecast
      tilt: int(0,90) # Tilt for PV forecast
      power: int(1,) # Power for PV forecast
      powerInverter: int(1,) # Power Inverter for PV forecast
      inverterEfficiency: float(0.0,1.0) # Inverter Efficiency for PV forecast
      horizon: str? # Optional - Horizon to calculate shading

  inverter:
    type: list(fronius_gen24|evcc|default)
    address: str?
    user: str?
    password: password?
    max_grid_charge_rate: int(0,50000)?
    max_pv_charge_rate: int(0,50000)?
  evcc:
    url: str # URL to your evcc installation
  mqtt:
    enabled: bool # Enable MQTT - default: false
    broker: str # URL for MQTT server - default: mqtt://yourMQTTserver
    port: int(1,65535) # Port for MQTT server - default: 1883
    user: str # Username for MQTT server - default: mqtt
    password: password # Password for MQTT server - default: mqtt
    tls: bool # Use TLS for MQTT server - default: false
    ha_mqtt_auto_discovery: bool # Enable Home Assistant MQTT auto discovery - default: true
    ha_mqtt_auto_discovery_prefix: str # Prefix for Home Assistant MQTT auto discovery - default: homeassistant
  refresh_time: int(1,) # Default refresh time in minutes
  time_zone: str # Default time zone
  eos_connect_web_port: int(1,65535) # Port for EOS server
  log_level: list(debug|info|warning|error) # loglevel options
